#pragma once#include <variant>namespace StateMachine{    enum class StartState{        START    };    enum class RegistrationState{        START_REGISTRATION,        GET_NAME,        GET_ROLE,        GET_CLUB    };    enum class WorkState{        SELECT,        CREATE_TASK,        DELETE_TASK    };    using State = std::variant<StateMachine::StartState, StateMachine::RegistrationState, StateMachine::WorkState>;    class StateMachine{        State _state;    public:        StateMachine();        StateMachine(State state);        void SetState(State state);        State GetState();    };}